{"version":3,"file":"static/js/70.3f5158d1.chunk.js","mappings":"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","sources":["pages/Admin/components/ManageOrder/ManageOrder.tsx","hooks/useDebounce.ts","components/ListItemRow/ListItemRow.tsx","pages/Admin/components/ManageCategory/components/CategoryListItem/CategoryListItem.tsx","pages/Admin/components/ManageCategory/ManageCategory.tsx","pages/Admin/components/ManageCarModel/ManageCarModel.tsx","pages/Admin/components/ManageDetail/ManageDetail.tsx","pages/Admin/Admin.tsx"],"sourcesContent":["import { Box, Input, InputGroup, Text } from '@chakra-ui/react'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axiosApi from 'utils/api'\r\n\r\nconst ManageOrder = () => {\r\n  const [searchState, setSearchState] = useState('')\r\n  const debouncedSearchState = useDebounce(searchState, 350)\r\n\r\n  useEffect(() => {\r\n    const searchReq = async () => {\r\n      const res = await axiosApi.get(`/detail?search=${debouncedSearchState}`)\r\n      //   console.log(res)\r\n    }\r\n    searchReq()\r\n  }, [debouncedSearchState])\r\n\r\n  return (\r\n    <Box>\r\n      <Text fontSize=\"xl\">Поиск заказа</Text>\r\n      <InputGroup className=\"mt-1\">\r\n        <Input\r\n          value={searchState}\r\n          placeholder=\"Введите номер заказа\"\r\n          onChange={(e) => setSearchState(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ManageOrder\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport default function useDebounce(value: string, delay: number) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value)\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value)\r\n      }, delay)\r\n\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [value]\r\n  )\r\n\r\n  return debouncedValue\r\n}\r\n","import { AccordionButton, AccordionIcon, Box, Input, Text } from '@chakra-ui/react'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { ICategoryItem, ICategoryItemAdd } from 'types/category.types'\r\nimport { IModel } from 'types/model.types'\r\n\r\ninterface Props {\r\n  title: string\r\n  id: number\r\n  item?: IModel\r\n  parentCategoryId?: number\r\n  isParent?: boolean\r\n  saveHandler: (id: number | null, body: ICategoryItem | ICategoryItemAdd) => void\r\n  deleteHandler: (id: number) => void\r\n  isEditModal?: boolean\r\n  editHandlerModal?: (editableElement: IModel) => void\r\n}\r\n\r\nconst ListItemRow: React.FC<Props> = ({\r\n  title,\r\n  isParent = false,\r\n  isEditModal = false,\r\n  id,\r\n  parentCategoryId,\r\n  item,\r\n  saveHandler,\r\n  deleteHandler,\r\n  editHandlerModal,\r\n}) => {\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const isNew = useRef(false)\r\n  const [textValue, setTextValue] = useState(title)\r\n\r\n  useEffect(() => {\r\n    if (title === '') {\r\n      setIsEdit(true)\r\n      isNew.current = true\r\n    }\r\n  }, [])\r\n\r\n  const deleteClickHandler = (event) => {\r\n    if (isParent) event.stopPropagation()\r\n    if (id) return deleteHandler(id)\r\n  }\r\n\r\n  const editHandler = (event) => {\r\n    if (isEditModal && !isParent) {\r\n    }\r\n    if (isParent) event.stopPropagation()\r\n    if (textValue === '') return\r\n    setIsEdit(!isEdit)\r\n  }\r\n\r\n  const updateHandler = (event) => {\r\n    if (isParent) event.stopPropagation()\r\n    if (textValue === '') return\r\n    setIsEdit(!isEdit)\r\n    if (isNew.current) {\r\n      if (isParent) {\r\n        saveHandler(null, { title: textValue })\r\n      } else {\r\n        return saveHandler(null, { title: textValue, parentCategoryId })\r\n      }\r\n      return (isNew.current = false)\r\n    }\r\n    if (id !== -1) {\r\n      return saveHandler(id, { title: textValue })\r\n    }\r\n  }\r\n\r\n  if (isParent) {\r\n    return (\r\n      <AccordionButton justifyContent=\"space-between\" cursor=\"pointer\" as={'div'}>\r\n        {isEdit && (\r\n          <Input\r\n            onKeyDown={(e) => e.stopPropagation()}\r\n            required\r\n            className=\"max-w-sm\"\r\n            value={textValue}\r\n            onChange={(e) => setTextValue(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n        )}\r\n        {!isEdit && <Text className=\"py-2\">{textValue}</Text>}\r\n        <Box>\r\n          {!isEdit && (\r\n            <i\r\n              className=\"cursor-pointer text-chakra-blue-500 fa-solid fa-pen p-1 \"\r\n              onClick={editHandler}\r\n            ></i>\r\n          )}\r\n          {isEdit && (\r\n            <i\r\n              className=\"fa-solid fa-check p-1 text-chakra-green-400 ml-4\"\r\n              style={{ cursor: textValue === '' ? 'not-allowed' : 'pointer' }}\r\n              onClick={updateHandler}\r\n            ></i>\r\n          )}\r\n          <i\r\n            className=\"cursor-pointer text-chakra-red-500 fa-solid fa-trash-can p-1 ml-4\"\r\n            onClick={deleteClickHandler}\r\n          ></i>\r\n\r\n          <AccordionIcon className=\"ml-2\" />\r\n        </Box>\r\n      </AccordionButton>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box className=\"p-3 flex justify-between items-center\">\r\n      {isEdit && (\r\n        <Input\r\n          className=\"max-w-sm\"\r\n          value={textValue}\r\n          onChange={(e) => setTextValue(e.target.value)}\r\n        />\r\n      )}\r\n      {!isEdit && <Text>{isEditModal ? title : textValue}</Text>}\r\n      <Box className=\"flex gap-4\">\r\n        {!isEdit && (\r\n          <i\r\n            className=\"cursor-pointer text-chakra-blue-500 fa-solid fa-pen p-1 \"\r\n            // @ts-expect-error\r\n            onClick={isEditModal ? editHandlerModal(item as IModel) : editHandler}\r\n          ></i>\r\n        )}\r\n        {isEdit && (\r\n          <i\r\n            className=\"fa-solid fa-check p-1 text-chakra-green-400 ml-4\"\r\n            style={{ cursor: textValue === '' ? 'not-allowed' : 'pointer' }}\r\n            onClick={updateHandler}\r\n          ></i>\r\n        )}\r\n        <i\r\n          className=\"cursor-pointer text-chakra-red-500 fa-solid fa-trash-can p-1\"\r\n          onClick={deleteClickHandler}\r\n        ></i>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ListItemRow\r\n","import { AccordionItem, AccordionPanel, Box, Button } from '@chakra-ui/react'\r\nimport ListItemRow from 'components/ListItemRow/ListItemRow'\r\nimport React from 'react'\r\nimport { ICategoryItem, ICategoryItemAdd } from 'types/category.types'\r\n\r\ninterface CategoryListItemProps {\r\n  item: ICategoryItem\r\n  saveHandler: (id: number | null, body: ICategoryItem | ICategoryItemAdd) => void\r\n  deleteHandler: (id: number) => void\r\n  addChildCategoryHandler: (id: number) => void\r\n}\r\n\r\nconst CategoryListItem: React.FC<CategoryListItemProps> = ({\r\n  item,\r\n  saveHandler,\r\n  deleteHandler,\r\n  addChildCategoryHandler,\r\n}) => {\r\n  const addChild = () => addChildCategoryHandler(item.id)\r\n  return (\r\n    <AccordionItem>\r\n      <ListItemRow\r\n        id={item.id ?? -1}\r\n        saveHandler={saveHandler}\r\n        isParent={true}\r\n        title={item.title}\r\n        parentCategoryId={item.id}\r\n        deleteHandler={deleteHandler}\r\n      />\r\n      <AccordionPanel>\r\n        {!!item?.childCategories?.length &&\r\n          item.childCategories.map((element, index) => (\r\n            <ListItemRow\r\n              key={`${element.id}_${index}`}\r\n              deleteHandler={deleteHandler}\r\n              saveHandler={saveHandler}\r\n              id={element.id ?? -1}\r\n              title={element.title}\r\n              parentCategoryId={item.id}\r\n            />\r\n          ))}\r\n        <Box textAlign=\"right\">\r\n          <Button\r\n            color=\"gray.600\"\r\n            className=\"mr-4\"\r\n            variant={'ghost'}\r\n            onClick={addChild}\r\n            disabled={!item.title}\r\n          >\r\n            <i className=\"fa-solid fa-plus\"></i>\r\n          </Button>\r\n        </Box>\r\n      </AccordionPanel>\r\n    </AccordionItem>\r\n  )\r\n}\r\n\r\nexport default CategoryListItem\r\n","import { Accordion, Box, Button, Text } from '@chakra-ui/react'\r\nimport { useEffect, useState } from 'react'\r\nimport {\r\n  addCategoryItem,\r\n  deleteCategoryItem,\r\n  fetchCategoryItems,\r\n  updateCategoryItem,\r\n} from 'store/catalog/category.action'\r\nimport { addNewCategory, deleteNewCategory } from 'store/catalog/category.slice'\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks'\r\nimport { ICategoryItem, ICategoryItemAdd, IUpdateCategoryItem } from 'types/category.types'\r\nimport CategoryListItem from './components/CategoryListItem/CategoryListItem'\r\n\r\nconst ManageCategory = () => {\r\n  const categories = useAppSelector((state) => state.category)\r\n\r\n  const { items } = categories\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (categories.items.length === 0) {\r\n      dispatch(fetchCategoryItems())\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const addCategoryHandler = () => {\r\n    dispatch(addNewCategory())\r\n  }\r\n\r\n  const addChildCategoryHandler = (id: number) => {\r\n    dispatch(addNewCategory(id))\r\n  }\r\n\r\n  const saveCategoryHandler = (id: number | null, body: ICategoryItem | ICategoryItemAdd) => {\r\n    if (id) {\r\n      return dispatch(updateCategoryItem({ body, id } as IUpdateCategoryItem))\r\n    }\r\n    return dispatch(addCategoryItem(body))\r\n  }\r\n\r\n  const deleteCategoryHandler = (id: number) => {\r\n    if (id > 0) return dispatch(deleteCategoryItem(id))\r\n    return dispatch(deleteNewCategory(id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box className=\"flex justify-between items-center\">\r\n        <Text fontSize=\"xl\">Категории запчастей</Text>\r\n      </Box>\r\n      <Accordion className=\"mt-5\" allowMultiple>\r\n        {!!items.length &&\r\n          items.map((item, index) => (\r\n            <CategoryListItem\r\n              key={`${item?.id}_${index}`}\r\n              item={item}\r\n              saveHandler={saveCategoryHandler}\r\n              deleteHandler={deleteCategoryHandler}\r\n              addChildCategoryHandler={addChildCategoryHandler}\r\n            />\r\n          ))}\r\n      </Accordion>\r\n      <Box className=\"text-right p-4\">\r\n        <Button onClick={addCategoryHandler}>Добавить</Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ManageCategory\r\n","// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Box,\r\n  Button,\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useDisclosure,\r\n} from '@chakra-ui/react'\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks'\r\nimport { addModel, deleteModel, editModel, fetchModel } from 'store/model/model.action'\r\nimport ListItemRow from 'components/ListItemRow/ListItemRow'\r\nimport { IModel } from 'types/model.types'\r\nimport { IAddModelModal } from './types'\r\nimport { addBrand } from 'store/model/model.slice'\r\n\r\nconst editableInitState = {\r\n  title: '',\r\n  model: '',\r\n  newImg: null,\r\n}\r\n\r\nconst ManageCarModel = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const { items } = useAppSelector((state) => state.model)\r\n  const dispatch = useAppDispatch()\r\n  const [editableElement, setEditableElement] = useState<Partial<IAddModelModal>>(editableInitState)\r\n  useEffect(() => {\r\n    if (items.length === 0) {\r\n      dispatch(fetchModel())\r\n    }\r\n  }, [])\r\n\r\n  const changeModalState = (key, value) => {\r\n    if (key === 'newImg') {\r\n      if (value[0]) {\r\n        value = URL.createObjectURL(value[0])\r\n      }\r\n    }\r\n\r\n    setEditableElement((prevState) => ({ ...prevState, [key]: value }))\r\n  }\r\n\r\n  const editClickHandler =\r\n    (element: Partial<IAddModelModal> = editableInitState, brandId?: number | undefined) =>\r\n    () => {\r\n      if (brandId) setEditableElement({ ...element, brandId })\r\n      else setEditableElement(element)\r\n      onOpen()\r\n    }\r\n\r\n  const closeClickHandler = () => {\r\n    onClose()\r\n    setEditableElement(editableInitState)\r\n  }\r\n\r\n  const saveNewBrand = (_id: number | undefined | null = null, body) => {\r\n    dispatch(addModel(body))\r\n  }\r\n\r\n  const saveEditParent = (id, body) => {\r\n    dispatch(editModel({ id, body }))\r\n  }\r\n\r\n  const saveEditCarModel = async () => {\r\n    const formData = new FormData()\r\n    if (editableElement.newImg) {\r\n      const blob = await fetch(editableElement.newImg).then((res) => res.blob())\r\n      formData.append('img', blob)\r\n    }\r\n\r\n    formData.append('title', editableElement?.title)\r\n    formData.append('model', editableElement?.model)\r\n    formData.append('brandId', editableElement?.brandId)\r\n    if (editableElement?.id) {\r\n      dispatch(editModel({ id: editableElement.id, body: formData }))\r\n    } else {\r\n      dispatch(addModel(formData))\r\n    }\r\n    closeClickHandler()\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    dispatch(deleteModel(id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box className=\"flex items-center justify-between\">\r\n        <Text fontSize=\"xl\">Марки машин</Text>\r\n      </Box>\r\n      <Accordion className=\"mt-5\" allowMultiple={true}>\r\n        {items &&\r\n          items.map((item, index) => (\r\n            <AccordionItem key={`${item.id}_${index}`}>\r\n              <ListItemRow\r\n                deleteHandler={deleteHandler}\r\n                id={item.id}\r\n                saveHandler={item.id < 0 ? saveNewBrand : saveEditParent}\r\n                title={item.title}\r\n                isParent={true}\r\n              />\r\n              <AccordionPanel>\r\n                {!!item?.brandModels?.length &&\r\n                  item.brandModels.map((element, index) => (\r\n                    <ListItemRow\r\n                      item={element}\r\n                      key={`${element.id}_${index}`}\r\n                      deleteHandler={deleteHandler}\r\n                      saveHandler={saveNewBrand}\r\n                      id={element.id ?? -1}\r\n                      title={element.title}\r\n                      parentCategoryId={item.id}\r\n                      editHandlerModal={editClickHandler}\r\n                      isEditModal\r\n                    />\r\n                  ))}\r\n                <Box textAlign=\"right\">\r\n                  <Button\r\n                    color=\"gray.600\"\r\n                    className=\"mr-4\"\r\n                    variant={'ghost'}\r\n                    onClick={editClickHandler(undefined, item.id)}\r\n                    disabled={!item.title}\r\n                  >\r\n                    <i className=\"fa-solid fa-plus\"></i>\r\n                  </Button>\r\n                </Box>\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n          ))}\r\n      </Accordion>\r\n      <Box className=\"text-right p-4\">\r\n        <Button onClick={() => dispatch(addBrand())}>Добавить</Button>\r\n      </Box>\r\n      <Modal isOpen={isOpen} onClose={closeClickHandler} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Добавить модель</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Text>Название</Text>\r\n            <Input\r\n              value={editableElement.title}\r\n              onChange={(e) => changeModalState('title', e.target.value)}\r\n            />\r\n            <Text>Модель</Text>\r\n\r\n            <Input\r\n              className=\"mt-2\"\r\n              placeholder=\"Модель\"\r\n              value={editableElement.model}\r\n              onChange={(e) => changeModalState('model', e.target.value)}\r\n            />\r\n            <Box>\r\n              <Text className=\"mt-2\">Изображение</Text>\r\n              <label\r\n                className=\"cursor-pointer mt-3 p-4 flex justify-center items-center border-2 border-dashed\"\r\n                htmlFor=\"uploadFile\"\r\n              >\r\n                Выберите изображение\r\n              </label>\r\n              <input\r\n                className=\"overflow-hidden w-0 h-0 opacity-0 absolute\"\r\n                type=\"file\"\r\n                name=\"uploadFile\"\r\n                id=\"uploadFile\"\r\n                onChange={(e) => changeModalState('newImg', e.target.files ?? '')}\r\n              />\r\n            </Box>\r\n            <Box className=\"mt-2 flex justify-center\">\r\n              <img\r\n                className=\"max-w-full\"\r\n                src={\r\n                  editableElement.newImg\r\n                    ? editableElement.newImg\r\n                    : editableElement.img\r\n                    ? editableElement.img\r\n                    : ''\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </Box>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button variant=\"ghost\" mr={3} onClick={closeClickHandler}>\r\n              Отмена\r\n            </Button>\r\n            <Button colorScheme=\"blue\" onClick={saveEditCarModel}>\r\n              Сохранить\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ManageCarModel\r\n","import React from 'react'\r\nimport { Box, Text } from '@chakra-ui/react'\r\nconst ManageDetail = () => {\r\n  return (\r\n    <Box>\r\n      <Text fontSize=\"xl\">Детали</Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ManageDetail\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  Container,\r\n  Flex,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport detailImg from 'assets/img/detail.png'\r\nimport ManageOrder from './components/ManageOrder/ManageOrder'\r\nimport ManageCategory from './components/ManageCategory/ManageCategory'\r\nimport ManageCarModel from './components/ManageCarModel/ManageCarModel'\r\nimport ManageDetail from './components/ManageDetail/ManageDetail'\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <Container maxW={'container.xl'}>\r\n      <Text className=\"sticky top-36 left-4\" fontSize=\"1xl\" fontWeight=\"bold\">\r\n        Админ-панель\r\n      </Text>\r\n\r\n      <Tabs>\r\n        <Flex className=\"mt-4 w-full\" justifyContent=\"space-between\">\r\n          <Box\r\n            className=\"w-full max-w-xs sticky top-44 left-4\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"lg\"\r\n            flexGrow={0}\r\n            height=\"max-content\"\r\n          >\r\n            <TabList flexDirection=\"column\" borderBottom=\"none\">\r\n              <Tab className=\"py-3\">\r\n                <i className=\"fa-solid fa-clipboard-list mr-2\"></i>Заказы\r\n              </Tab>\r\n              <Tab className=\"py-3\">\r\n                <i className=\"fa-solid fa-list mr-2\"></i>Категории\r\n              </Tab>\r\n              <Tab className=\"py-3\">\r\n                <i className=\"fa-solid fa-car mr-2\"></i>Модели\r\n              </Tab>\r\n              <Tab className=\"py-3\">\r\n                <img className=\"w-4 h-4 mr-2\" src={detailImg} alt=\"\" />\r\n                Детали\r\n              </Tab>\r\n            </TabList>\r\n          </Box>\r\n          <Box className=\"flex-auto ml-7\">\r\n            <TabPanels>\r\n              <TabPanel className=\"p-0\">\r\n                <ManageOrder />\r\n              </TabPanel>\r\n              <TabPanel className=\"p-0\">\r\n                <ManageCategory />\r\n              </TabPanel>\r\n              <TabPanel className=\"p-0\">\r\n                <ManageCarModel />\r\n              </TabPanel>\r\n              <TabPanel className=\"p-0\">\r\n                <ManageDetail />\r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Box>\r\n        </Flex>\r\n      </Tabs>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n"],"names":["useState","searchState","setSearchState","debouncedSearchState","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","searchReq","axiosApi","fontSize","className","placeholder","onChange","e","target","title","isParent","isEditModal","id","parentCategoryId","item","saveHandler","deleteHandler","editHandlerModal","isEdit","setIsEdit","isNew","useRef","textValue","setTextValue","current","deleteClickHandler","event","stopPropagation","editHandler","updateHandler","justifyContent","cursor","as","onKeyDown","required","onClick","style","addChildCategoryHandler","childCategories","length","map","element","index","textAlign","color","variant","disabled","categories","useAppSelector","state","category","items","dispatch","useAppDispatch","fetchCategoryItems","addNewCategory","saveCategoryHandler","body","updateCategoryItem","addCategoryItem","deleteCategoryHandler","deleteCategoryItem","deleteNewCategory","allowMultiple","editableInitState","model","newImg","useDisclosure","isOpen","onOpen","onClose","editableElement","setEditableElement","fetchModel","changeModalState","key","URL","createObjectURL","prevState","editClickHandler","brandId","closeClickHandler","saveNewBrand","addModel","saveEditParent","editModel","saveEditCarModel","formData","FormData","fetch","then","res","blob","append","deleteModel","brandModels","undefined","addBrand","isCentered","htmlFor","type","name","files","src","img","alt","mr","colorScheme","maxW","fontWeight","borderWidth","borderRadius","flexGrow","height","flexDirection","borderBottom","detailImg"],"sourceRoot":""}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int       @id @default(autoincrement())
  firstname  String
  secondname String
  lastname   String
  password   String
  email      String    @unique
  phone      String    @unique
  imgId      Int?
  img        Images?   @relation(fields: [imgId], references: [id])
  type       String
  token      String
  Orders     Orders[]
  Reviews    Reviews[]
}

model Images {
  id        Int         @id @default(autoincrement())
  path      String
  CarModels CarModels[]
  User      Users[]
  Details   Details[]
}

model Categories {
  id               Int          @id @default(autoincrement())
  title            String?
  parentCategoryId Int?
  parentCategory   Categories?  @relation("CategorieType", fields: [parentCategoryId], references: [id])
  childCategorys   Categories[] @relation("CategorieType")
  Details          Details[]
}

model Details {
  id               Int        @id @default(autoincrement())
  categoryId       Int
  category         Categories @relation(fields: [categoryId], references: [id])
  title            String
  shortDescription String
  modelId          Int?
  model            CarModels? @relation(fields: [modelId], references: [id])
  options          String
  price            Int
  star             Int
  imgId            Int?
  img              Images?    @relation(fields: [imgId], references: [id])
  vendorCode       String?
  Orders           Orders[]
  Reviews          Reviews[]
}

model Orders {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      Users    @relation(fields: [userId], references: [id])
  detailId  Int
  detail    Details  @relation(fields: [detailId], references: [id])
  createdAt DateTime @default(now())
}

model CarModels {
  id          Int         @id @default(autoincrement())
  title       String
  model       String?
  brandId     Int?
  brand       CarModels?  @relation("Brand", fields: [brandId], references: [id])
  brandModels CarModels[] @relation("Brand")
  imgId       Int?
  img         Images?     @relation(fields: [imgId], references: [id])
  Detail      Details[]
}

model Reviews {
  id       Int     @id @default(autoincrement())
  userId   Int
  user     Users   @relation(fields: [userId], references: [id])
  detailId Int
  detail   Details @relation(fields: [detailId], references: [id])
  star     Int
  content  String
}
